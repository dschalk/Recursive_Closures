{"version":3,"file":"index2.js","sources":["../../../../node_modules/svelte/src/constants.js","../../../../node_modules/svelte/src/internal/shared/errors.js","../../../../node_modules/svelte/src/internal/server/context.js","../../../../node_modules/svelte/src/internal/server/hydration.js","../../../../node_modules/svelte/src/internal/server/payload.js","../../../../node_modules/svelte/src/internal/server/index.js"],"sourcesContent":["export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\nexport const TEMPLATE_USE_SVG = 1 << 2;\nexport const TEMPLATE_USE_MATHML = 1 << 3;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_HTML = 'http://www.w3.org/1999/xhtml';\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n\nexport const ATTACHMENT_KEY = '@attach';\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Cannot use `{@render children(...)}` if the parent component uses `let:` directives. Consider using a named snippet instead\n * @returns {never}\n */\nexport function invalid_default_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_default_snippet\\nCannot use \\`{@render children(...)}\\` if the parent component uses \\`let:\\` directives. Consider using a named snippet instead\\nhttps://svelte.dev/e/invalid_default_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_default_snippet`);\n\t}\n}\n\n/**\n * A snippet function was passed invalid arguments. Snippets should only be instantiated via `{@render ...}`\n * @returns {never}\n */\nexport function invalid_snippet_arguments() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet_arguments\\nA snippet function was passed invalid arguments. Snippets should only be instantiated via \\`{@render ...}\\`\\nhttps://svelte.dev/e/invalid_snippet_arguments`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet_arguments`);\n\t}\n}\n\n/**\n * `%name%(...)` can only be used during component initialisation\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_outside_component(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_outside_component\\n\\`${name}(...)\\` can only be used during component initialisation\\nhttps://svelte.dev/e/lifecycle_outside_component`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_outside_component`);\n\t}\n}\n\n/**\n * Attempted to render a snippet without a `{@render}` block. This would cause the snippet code to be stringified instead of its content being rendered to the DOM. To fix this, change `{snippet}` to `{@render snippet()}`.\n * @returns {never}\n */\nexport function snippet_without_render_tag() {\n\tif (DEV) {\n\t\tconst error = new Error(`snippet_without_render_tag\\nAttempted to render a snippet without a \\`{@render}\\` block. This would cause the snippet code to be stringified instead of its content being rendered to the DOM. To fix this, change \\`{snippet}\\` to \\`{@render snippet()}\\`.\\nhttps://svelte.dev/e/snippet_without_render_tag`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/snippet_without_render_tag`);\n\t}\n}\n\n/**\n * `%name%` is not a store with a `subscribe` method\n * @param {string} name\n * @returns {never}\n */\nexport function store_invalid_shape(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`store_invalid_shape\\n\\`${name}\\` is not a store with a \\`subscribe\\` method\\nhttps://svelte.dev/e/store_invalid_shape`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/store_invalid_shape`);\n\t}\n}\n\n/**\n * The `this` prop on `<svelte:element>` must be a string, if defined\n * @returns {never}\n */\nexport function svelte_element_invalid_this_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`svelte_element_invalid_this_value\\nThe \\`this\\` prop on \\`<svelte:element>\\` must be a string, if defined\\nhttps://svelte.dev/e/svelte_element_invalid_this_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/svelte_element_invalid_this_value`);\n\t}\n}","/** @import { Component } from '#server' */\nimport { DEV } from 'esm-env';\nimport { on_destroy } from './index.js';\nimport * as e from '../shared/errors.js';\n\n/** @type {Component | null} */\nexport var current_component = null;\n\n/**\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\n\treturn result;\n}\n\n/**\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_or_init_context_map('setContext').set(key, context);\n\treturn context;\n}\n\n/**\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_or_init_context_map('hasContext').has(key);\n}\n\n/** @returns {Map<any, any>} */\nexport function getAllContexts() {\n\treturn get_or_init_context_map('getAllContexts');\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (current_component === null) {\n\t\te.lifecycle_outside_component(name);\n\t}\n\n\treturn (current_component.c ??= new Map(get_parent_context(current_component) || undefined));\n}\n\n/**\n * @param {Function} [fn]\n */\nexport function push(fn) {\n\tcurrent_component = { p: current_component, c: null, d: null };\n\tif (DEV) {\n\t\t// component function\n\t\tcurrent_component.function = fn;\n\t}\n}\n\nexport function pop() {\n\tvar component = /** @type {Component} */ (current_component);\n\n\tvar ondestroy = component.d;\n\n\tif (ondestroy) {\n\t\ton_destroy.push(...ondestroy);\n\t}\n\n\tcurrent_component = component.p;\n}\n\n/**\n * @param {Component} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\n\treturn null;\n}\n","import { HYDRATION_END, HYDRATION_START, HYDRATION_START_ELSE } from '../../constants.js';\n\nexport const BLOCK_OPEN = `<!--${HYDRATION_START}-->`;\nexport const BLOCK_OPEN_ELSE = `<!--${HYDRATION_START_ELSE}-->`;\nexport const BLOCK_CLOSE = `<!--${HYDRATION_END}-->`;\nexport const EMPTY_COMMENT = `<!---->`;\n","export class HeadPayload {\n\t/** @type {Set<{ hash: string; code: string }>} */\n\tcss = new Set();\n\tout = '';\n\tuid = () => '';\n\ttitle = '';\n\n\tconstructor(css = new Set(), out = '', title = '', uid = () => '') {\n\t\tthis.css = css;\n\t\tthis.out = out;\n\t\tthis.title = title;\n\t\tthis.uid = uid;\n\t}\n}\n\nexport class Payload {\n\t/** @type {Set<{ hash: string; code: string }>} */\n\tcss = new Set();\n\tout = '';\n\tuid = () => '';\n\tselect_value = undefined;\n\n\thead = new HeadPayload();\n\n\tconstructor(id_prefix = '') {\n\t\tthis.uid = props_id_generator(id_prefix);\n\t\tthis.head.uid = this.uid;\n\t}\n}\n\n/**\n * Used in legacy mode to handle bindings\n * @param {Payload} to_copy\n * @returns {Payload}\n */\nexport function copy_payload({ out, css, head, uid }) {\n\tconst payload = new Payload();\n\n\tpayload.out = out;\n\tpayload.css = new Set(css);\n\tpayload.uid = uid;\n\n\tpayload.head = new HeadPayload();\n\tpayload.head.out = head.out;\n\tpayload.head.css = new Set(head.css);\n\tpayload.head.title = head.title;\n\tpayload.head.uid = head.uid;\n\n\treturn payload;\n}\n\n/**\n * Assigns second payload to first\n * @param {Payload} p1\n * @param {Payload} p2\n * @returns {void}\n */\nexport function assign_payload(p1, p2) {\n\tp1.out = p2.out;\n\tp1.css = p2.css;\n\tp1.head = p2.head;\n\tp1.uid = p2.uid;\n}\n\n/**\n * Creates an ID generator\n * @param {string} prefix\n * @returns {() => string}\n */\nfunction props_id_generator(prefix) {\n\tlet uid = 1;\n\treturn () => `${prefix}s${uid++}`;\n}\n","/** @import { ComponentType, SvelteComponent } from 'svelte' */\n/** @import { Component, RenderOutput } from '#server' */\n/** @import { Store } from '#shared' */\nexport { FILENAME, HMR } from '../../constants.js';\nimport { attr, clsx, to_class, to_style } from '../shared/attributes.js';\nimport { is_promise, noop } from '../shared/utils.js';\nimport { subscribe_to_store } from '../../store/utils.js';\nimport {\n\tUNINITIALIZED,\n\tELEMENT_PRESERVE_ATTRIBUTE_CASE,\n\tELEMENT_IS_NAMESPACED\n} from '../../constants.js';\nimport { escape_html } from '../../escaping.js';\nimport { DEV } from 'esm-env';\nimport { current_component, pop, push } from './context.js';\nimport { EMPTY_COMMENT, BLOCK_CLOSE, BLOCK_OPEN, BLOCK_OPEN_ELSE } from './hydration.js';\nimport { validate_store } from '../shared/validate.js';\nimport { is_boolean_attribute, is_raw_text_element, is_void } from '../../utils.js';\nimport { reset_elements } from './dev.js';\nimport { Payload } from './payload.js';\n\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nconst INVALID_ATTR_NAME_CHAR_REGEX =\n\t/[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n\n/**\n * @param {Payload} payload\n * @param {string} tag\n * @param {() => void} attributes_fn\n * @param {() => void} children_fn\n * @returns {void}\n */\nexport function element(payload, tag, attributes_fn = noop, children_fn = noop) {\n\tpayload.out += '<!---->';\n\n\tif (tag) {\n\t\tpayload.out += `<${tag}`;\n\t\tattributes_fn();\n\t\tpayload.out += `>`;\n\n\t\tif (!is_void(tag)) {\n\t\t\tchildren_fn();\n\t\t\tif (!is_raw_text_element(tag)) {\n\t\t\t\tpayload.out += EMPTY_COMMENT;\n\t\t\t}\n\t\t\tpayload.out += `</${tag}>`;\n\t\t}\n\t}\n\n\tpayload.out += '<!---->';\n}\n\n/**\n * Array of `onDestroy` callbacks that should be called at the end of the server render function\n * @type {Function[]}\n */\nexport let on_destroy = [];\n\n/**\n * Only available on the server and when compiling with the `server` option.\n * Takes a component and returns an object with `body` and `head` properties on it, which you can use to populate the HTML when server-rendering your app.\n * @template {Record<string, any>} Props\n * @param {import('svelte').Component<Props> | ComponentType<SvelteComponent<Props>>} component\n * @param {{ props?: Omit<Props, '$$slots' | '$$events'>; context?: Map<any, any>; idPrefix?: string }} [options]\n * @returns {RenderOutput}\n */\nexport function render(component, options = {}) {\n\tconst payload = new Payload(options.idPrefix ? options.idPrefix + '-' : '');\n\n\tconst prev_on_destroy = on_destroy;\n\ton_destroy = [];\n\tpayload.out += BLOCK_OPEN;\n\n\tlet reset_reset_element;\n\n\tif (DEV) {\n\t\t// prevent parent/child element state being corrupted by a bad render\n\t\treset_reset_element = reset_elements();\n\t}\n\n\tif (options.context) {\n\t\tpush();\n\t\t/** @type {Component} */ (current_component).c = options.context;\n\t}\n\n\t// @ts-expect-error\n\tcomponent(payload, options.props ?? {}, {}, {});\n\n\tif (options.context) {\n\t\tpop();\n\t}\n\n\tif (reset_reset_element) {\n\t\treset_reset_element();\n\t}\n\n\tpayload.out += BLOCK_CLOSE;\n\tfor (const cleanup of on_destroy) cleanup();\n\ton_destroy = prev_on_destroy;\n\n\tlet head = payload.head.out + payload.head.title;\n\n\tfor (const { hash, code } of payload.css) {\n\t\thead += `<style id=\"${hash}\">${code}</style>`;\n\t}\n\n\treturn {\n\t\thead,\n\t\thtml: payload.out,\n\t\tbody: payload.out\n\t};\n}\n\n/**\n * @param {Payload} payload\n * @param {(head_payload: Payload['head']) => void} fn\n * @returns {void}\n */\nexport function head(payload, fn) {\n\tconst head_payload = payload.head;\n\thead_payload.out += BLOCK_OPEN;\n\tfn(head_payload);\n\thead_payload.out += BLOCK_CLOSE;\n}\n\n/**\n * @param {Payload} payload\n * @param {boolean} is_html\n * @param {Record<string, string>} props\n * @param {() => void} component\n * @param {boolean} dynamic\n * @returns {void}\n */\nexport function css_props(payload, is_html, props, component, dynamic = false) {\n\tconst styles = style_object_to_string(props);\n\n\tif (is_html) {\n\t\tpayload.out += `<svelte-css-wrapper style=\"display: contents; ${styles}\">`;\n\t} else {\n\t\tpayload.out += `<g style=\"${styles}\">`;\n\t}\n\n\tif (dynamic) {\n\t\tpayload.out += '<!---->';\n\t}\n\n\tcomponent();\n\n\tif (is_html) {\n\t\tpayload.out += `<!----></svelte-css-wrapper>`;\n\t} else {\n\t\tpayload.out += `<!----></g>`;\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} attrs\n * @param {string | null} css_hash\n * @param {Record<string, boolean>} [classes]\n * @param {Record<string, string>} [styles]\n * @param {number} [flags]\n * @returns {string}\n */\nexport function spread_attributes(attrs, css_hash, classes, styles, flags = 0) {\n\tif (styles) {\n\t\tattrs.style = to_style(attrs.style, styles);\n\t}\n\n\tif (attrs.class) {\n\t\tattrs.class = clsx(attrs.class);\n\t}\n\n\tif (css_hash || classes) {\n\t\tattrs.class = to_class(attrs.class, css_hash, classes);\n\t}\n\n\tlet attr_str = '';\n\tlet name;\n\n\tconst is_html = (flags & ELEMENT_IS_NAMESPACED) === 0;\n\tconst lowercase = (flags & ELEMENT_PRESERVE_ATTRIBUTE_CASE) === 0;\n\n\tfor (name in attrs) {\n\t\t// omit functions, internal svelte properties and invalid attribute names\n\t\tif (typeof attrs[name] === 'function') continue;\n\t\tif (name[0] === '$' && name[1] === '$') continue; // faster than name.startsWith('$$')\n\t\tif (INVALID_ATTR_NAME_CHAR_REGEX.test(name)) continue;\n\n\t\tvar value = attrs[name];\n\n\t\tif (lowercase) {\n\t\t\tname = name.toLowerCase();\n\t\t}\n\n\t\tattr_str += attr(name, value, is_html && is_boolean_attribute(name));\n\t}\n\n\treturn attr_str;\n}\n\n/**\n * @param {Record<string, unknown>[]} props\n * @returns {Record<string, unknown>}\n */\nexport function spread_props(props) {\n\t/** @type {Record<string, unknown>} */\n\tconst merged_props = {};\n\tlet key;\n\n\tfor (let i = 0; i < props.length; i++) {\n\t\tconst obj = props[i];\n\t\tfor (key in obj) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(obj, key);\n\t\t\tif (desc) {\n\t\t\t\tObject.defineProperty(merged_props, key, desc);\n\t\t\t} else {\n\t\t\t\tmerged_props[key] = obj[key];\n\t\t\t}\n\t\t}\n\t}\n\treturn merged_props;\n}\n\n/**\n * @param {unknown} value\n * @returns {string}\n */\nexport function stringify(value) {\n\treturn typeof value === 'string' ? value : value == null ? '' : value + '';\n}\n\n/** @param {Record<string, string>} style_object */\nfunction style_object_to_string(style_object) {\n\treturn Object.keys(style_object)\n\t\t.filter(/** @param {any} key */ (key) => style_object[key] != null && style_object[key] !== '')\n\t\t.map(/** @param {any} key */ (key) => `${key}: ${escape_html(style_object[key], true)};`)\n\t\t.join(' ');\n}\n\n/**\n * @param {any} value\n * @param {string | undefined} [hash]\n * @param {Record<string, boolean>} [directives]\n */\nexport function attr_class(value, hash, directives) {\n\tvar result = to_class(value, hash, directives);\n\treturn result ? ` class=\"${escape_html(result, true)}\"` : '';\n}\n\n/**\n * @param {any} value\n * @param {Record<string,any>|[Record<string,any>,Record<string,any>]} [directives]\n */\nexport function attr_style(value, directives) {\n\tvar result = to_style(value, directives);\n\treturn result ? ` style=\"${escape_html(result, true)}\"` : '';\n}\n\n/**\n * @template V\n * @param {Record<string, [any, any, any]>} store_values\n * @param {string} store_name\n * @param {Store<V> | null | undefined} store\n * @returns {V}\n */\nexport function store_get(store_values, store_name, store) {\n\tif (DEV) {\n\t\tvalidate_store(store, store_name.slice(1));\n\t}\n\n\t// it could be that someone eagerly updates the store in the instance script, so\n\t// we should only reuse the store value in the template\n\tif (store_name in store_values && store_values[store_name][0] === store) {\n\t\treturn store_values[store_name][2];\n\t}\n\n\tstore_values[store_name]?.[1](); // if store was switched, unsubscribe from old store\n\tstore_values[store_name] = [store, null, undefined];\n\tconst unsub = subscribe_to_store(\n\t\tstore,\n\t\t/** @param {any} v */ (v) => (store_values[store_name][2] = v)\n\t);\n\tstore_values[store_name][1] = unsub;\n\treturn store_values[store_name][2];\n}\n\n/**\n * Sets the new value of a store and returns that value.\n * @template V\n * @param {Store<V>} store\n * @param {V} value\n * @returns {V}\n */\nexport function store_set(store, value) {\n\tstore.set(value);\n\treturn value;\n}\n\n/**\n * Updates a store with a new value.\n * @template V\n * @param {Record<string, [any, any, any]>} store_values\n * @param {string} store_name\n * @param {Store<V>} store\n * @param {any} expression\n */\nexport function store_mutate(store_values, store_name, store, expression) {\n\tstore_set(store, store_get(store_values, store_name, store));\n\treturn expression;\n}\n\n/**\n * @param {Record<string, [any, any, any]>} store_values\n * @param {string} store_name\n * @param {Store<number>} store\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store(store_values, store_name, store, d = 1) {\n\tlet store_value = store_get(store_values, store_name, store);\n\tstore.set(store_value + d);\n\treturn store_value;\n}\n\n/**\n * @param {Record<string, [any, any, any]>} store_values\n * @param {string} store_name\n * @param {Store<number>} store\n * @param {1 | -1} [d]\n * @returns {number}\n */\nexport function update_store_pre(store_values, store_name, store, d = 1) {\n\tconst value = store_get(store_values, store_name, store) + d;\n\tstore.set(value);\n\treturn value;\n}\n\n/** @param {Record<string, [any, any, any]>} store_values */\nexport function unsubscribe_stores(store_values) {\n\tfor (const store_name in store_values) {\n\t\tstore_values[store_name][1]();\n\t}\n}\n\n/**\n * @param {Payload} payload\n * @param {Record<string, any>} $$props\n * @param {string} name\n * @param {Record<string, unknown>} slot_props\n * @param {null | (() => void)} fallback_fn\n * @returns {void}\n */\nexport function slot(payload, $$props, name, slot_props, fallback_fn) {\n\tvar slot_fn = $$props.$$slots?.[name];\n\t// Interop: Can use snippets to fill slots\n\tif (slot_fn === true) {\n\t\tslot_fn = $$props[name === 'default' ? 'children' : name];\n\t}\n\n\tif (slot_fn !== undefined) {\n\t\tslot_fn(payload, slot_props);\n\t} else {\n\t\tfallback_fn?.();\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string[]} rest\n * @returns {Record<string, unknown>}\n */\nexport function rest_props(props, rest) {\n\t/** @type {Record<string, unknown>} */\n\tconst rest_props = {};\n\tlet key;\n\tfor (key in props) {\n\t\tif (!rest.includes(key)) {\n\t\t\trest_props[key] = props[key];\n\t\t}\n\t}\n\treturn rest_props;\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @returns {Record<string, unknown>}\n */\nexport function sanitize_props(props) {\n\tconst { children, $$slots, ...sanitized } = props;\n\treturn sanitized;\n}\n\n/**\n * @param {Record<string, any>} props\n * @returns {Record<string, boolean>}\n */\nexport function sanitize_slots(props) {\n\t/** @type {Record<string, boolean>} */\n\tconst sanitized = {};\n\tif (props.children) sanitized.default = true;\n\tfor (const key in props.$$slots) {\n\t\tsanitized[key] = true;\n\t}\n\treturn sanitized;\n}\n\n/**\n * Legacy mode: If the prop has a fallback and is bound in the\n * parent component, propagate the fallback value upwards.\n * @param {Record<string, unknown>} props_parent\n * @param {Record<string, unknown>} props_now\n */\nexport function bind_props(props_parent, props_now) {\n\tfor (const key in props_now) {\n\t\tconst initial_value = props_parent[key];\n\t\tconst value = props_now[key];\n\t\tif (\n\t\t\tinitial_value === undefined &&\n\t\t\tvalue !== undefined &&\n\t\t\tObject.getOwnPropertyDescriptor(props_parent, key)?.set\n\t\t) {\n\t\t\tprops_parent[key] = value;\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Payload} payload\n * @param {Promise<V>} promise\n * @param {null | (() => void)} pending_fn\n * @param {(value: V) => void} then_fn\n * @returns {void}\n */\nfunction await_block(payload, promise, pending_fn, then_fn) {\n\tif (is_promise(promise)) {\n\t\tpayload.out += BLOCK_OPEN;\n\t\tpromise.then(null, noop);\n\t\tif (pending_fn !== null) {\n\t\t\tpending_fn();\n\t\t}\n\t} else if (then_fn !== null) {\n\t\tpayload.out += BLOCK_OPEN_ELSE;\n\t\tthen_fn(promise);\n\t}\n}\n\nexport { await_block as await };\n\n/** @param {any} array_like_or_iterator */\nexport function ensure_array_like(array_like_or_iterator) {\n\tif (array_like_or_iterator) {\n\t\treturn array_like_or_iterator.length !== undefined\n\t\t\t? array_like_or_iterator\n\t\t\t: Array.from(array_like_or_iterator);\n\t}\n\treturn [];\n}\n\n/**\n * @param {any[]} args\n * @param {Function} [inspect]\n */\n// eslint-disable-next-line no-console\nexport function inspect(args, inspect = console.log) {\n\tinspect('init', ...args);\n}\n\n/**\n * @template V\n * @param {() => V} get_value\n */\nexport function once(get_value) {\n\tlet value = /** @type {V} */ (UNINITIALIZED);\n\treturn () => {\n\t\tif (value === UNINITIALIZED) {\n\t\t\tvalue = get_value();\n\t\t}\n\t\treturn value;\n\t};\n}\n\n/**\n * Create an unique ID\n * @param {Payload} payload\n * @returns {string}\n */\nexport function props_id(payload) {\n\tconst uid = payload.uid();\n\tpayload.out += '<!--#' + uid + '-->';\n\treturn uid;\n}\n\nexport { attr, clsx };\n\nexport { html } from './blocks/html.js';\n\nexport { push, pop } from './context.js';\n\nexport { push_element, pop_element, validate_snippet_args } from './dev.js';\n\nexport { assign_payload, copy_payload } from './payload.js';\n\nexport { snapshot } from '../shared/clone.js';\n\nexport { fallback, to_array } from '../shared/utils.js';\n\nexport {\n\tinvalid_default_snippet,\n\tvalidate_dynamic_element_tag,\n\tvalidate_void_dynamic_element,\n\tprevent_snippet_stringification\n} from '../shared/validate.js';\n\nexport { escape_html as escape };\n\n/**\n * @template T\n * @param {()=>T} fn\n * @returns {(new_value?: T) => (T | void)}\n */\nexport function derived(fn) {\n\tconst get_value = once(fn);\n\t/**\n\t * @type {T | undefined}\n\t */\n\tlet updated_value;\n\n\treturn function (new_value) {\n\t\tif (arguments.length === 0) {\n\t\t\treturn updated_value ?? get_value();\n\t\t}\n\t\tupdated_value = new_value;\n\t\treturn updated_value;\n\t};\n}\n\n/**\n *\n * @param {Payload} payload\n * @param {*} value\n */\nexport function maybe_selected(payload, value) {\n\treturn value === payload.select_value ? ' selected' : '';\n}\n\n/**\n * @param {Payload} payload\n * @param {() => void} children\n * @returns {void}\n */\nexport function valueless_option(payload, children) {\n\tvar i = payload.out.length;\n\n\tchildren();\n\n\tvar body = payload.out.slice(i);\n\n\tif (body.replace(/<!---->/g, '') === payload.select_value) {\n\t\t// replace '>' with ' selected>' (closing tag will be added later)\n\t\tpayload.out = payload.out.slice(0, i - 1) + ' selected>' + body;\n\t}\n}\n"],"names":["HYDRATION_START","HYDRATION_END","HYDRATION_ERROR","UNINITIALIZED","Symbol","lifecycle_outside_component","name","Error","__name","current_component","getContext","key","get_or_init_context_map","get","setContext","context","set","c","Map","get_parent_context","push","fn","p","d","pop","component","ondestroy","on_destroy","component_context","parent","context_map","BLOCK_OPEN","BLOCK_CLOSE","HeadPayload","this","css","Set","out","uid","title","constructor","Payload","select_value","head","id_prefix","props_id_generator","prefix","render","options","payload","idPrefix","prev_on_destroy","props","cleanup","hash","code","html","body","head_payload","stringify","value","attr_class","directives","result","to_class","escape_html","attr_style","to_style","slot","$$props","slot_props","fallback_fn","slot_fn","$$slots"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}