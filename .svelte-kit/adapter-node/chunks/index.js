var e=Object.defineProperty,__name=(t,s)=>e(t,"name",{value:s,configurable:!0});import{n as t,j as s}from"./equality.js";import"clsx";const r=[];function readable(e,t){return{subscribe:writable(e,t).subscribe}}function writable(e,a=t){let n=null;const u=new Set;function set(t){if(s(e,t)&&(e=t,n)){const t=!r.length;for(const s of u)s[1](),r.push(s,e);if(t){for(let e=0;e<r.length;e+=2)r[e][0](r[e+1]);r.length=0}}}function update(t){set(t(e))}function subscribe(s,r=t){const i=[s,r];return u.add(i),1===u.size&&(n=a(set,update)||t),s(e),()=>{u.delete(i),0===u.size&&n&&(n(),n=null)}}return __name(set,"set"),__name(update,"update"),__name(subscribe,"subscribe"),{set:set,update:update,subscribe:subscribe}}__name(readable,"readable"),__name(writable,"writable");export{readable as r,writable as w};
//# sourceMappingURL=index.js.map
