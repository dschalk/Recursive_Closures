var n=Object.defineProperty,__name=(t,a)=>n(t,"name",{value:a,configurable:!0});import{f as t,a}from"../chunks/BmjuCZ8b.js";import"../chunks/BHrKQAH6.js";import{p as e,s,f as r,a as o,t as i,b as p,m as v,c as u,n as c,r as d,d as l}from"../chunks/WU3FHSPT.js";import{e as b,s as w}from"../chunks/DbLMf37s.js";import{i as h}from"../chunks/gELEUX2p.js";var f=t(' <p>Using the modified version of M below, m can handle mixtures of synchronous and asynchronous arguments. idP(a) has no effect if a is a promise. Otherwise, idP transforms a into a promise. To see this in action, click "Restart" (below).</p> <pre></pre> <p id="yes">In the demonstration below, "m" is given mixtures of simple functions and promises.</p> <button data.sveltekit.reload="">Restart</button> <br/><br/> <span style="color: #FAF">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m(() => 4)(addP(3)) (squareP) (v => v-7)(dF3x).then(v => (A = v));\n=</span> <span style="font-weight: bold; color:red"> </span> &nbsp;&nbsp; <span>// x is changed to 4, then &nbsp;(4+3)**2 - 7 = 42</span> <br/><br/> <span style="color:#FAF">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;m(v => v/42)(v => v + 5)(v=>v*7)(pause(600))(dF3x).then(v => (B = v));\n= <span style="font-weight: bold; color:red"> </span></span> <span>&nbsp; &nbsp; // &nbsp;(42/42)*6*7 = 42</span> <br/><br/> <span style="color:#FAF">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;m(addP(7))(Math.sqrt)(v => v*6)(hello)(dF3x).then(a => (C = a));\n= <span style="font-weight: bold; color:red"> </span></span> <span>&nbsp; &nbsp; // &nbsp;Math.sqrt(42 + 7) * 6 = 42</span> <br/><br/> <span style="color:#FAF">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; m(divP(14))(v => v * 3)(addP(5))(v=> v * 3)(dF3x).then(v => (D = v)) = <span style="font-weight: bold; color:red"> </span></span> <span>&nbsp; &nbsp; // &nbsp;((42 / 14) * 3 + 5) * 3 = 42</span> <p>The asynchronous functions used above are in this list:</p> <pre></pre> <p>Here\'s the restart code:</p> <pre></pre> <br/><br/><br/> <br/><br/><br/>',1);function _page(n,t){e(t,!1);var m=__name((()=>{}),"dF3x");function M(n){return __name((function go(t){return t===m?n:(n=idP(n).then((n=>t(n))),go)}),"go")}__name(M,"M");const y=M(3);async function idP(n){return await wait(5),n}function wait(n){return new Promise((t=>setTimeout(t,n)))}__name(idP,"idP"),__name(wait,"wait");var x=v();async function squareP(n){return await wait(300),n*n}__name(squareP,"squareP");let P=__name((n=>async t=>(await wait(n),t)),"pause");async function hello(n){return s(x,"Hello "),await wait(700),s(q,"World"),await wait(700),s(x,42),await wait(700),s(q,42),await wait(600),n}__name(hello,"hello");let F=__name((n=>async t=>(await wait(500),parseInt(n,10)+parseInt(t,10))),"addP"),g=__name((n=>async t=>(await wait(300),t/n)),"divP");s(x,"A");var q=v("B"),A=v("C"),k=v("D");function restart(){s(x,"A"),s(q,"B"),s(A,"C"),s(k,"D"),y((()=>4))(F(3))(squareP)((n=>n-7))(m).then((n=>s(x,n))),y((n=>n/42))((n=>n+5))((n=>7*n))(P(600))(m).then((n=>s(q,n))),y(F(7))(Math.sqrt)((n=>6*n))(hello)(m).then((n=>s(A,n))),y(g(14))((n=>3*n))(F(5))((n=>3*n))(m).then((n=>s(k,n)))}function*generatorFunction(){return yield"m(v=>v**3)",yield"m(dF3x)  // 3",yield"m(v=>v**3)(v=>v*2)(v=>v-12)",yield"m(dF3x)  // 42",yield"m(v=>v+7)(Math.sqrt)(dF3x)  // 7",""}__name(restart,"restart"),restart(),__name(generatorFunction,"generatorFunction");var C=generatorFunction();function cow(){var n=C.next().value;console.log("z is",n)}function handleEvent(n){59===n.keyCode&&cow()}__name(cow,"cow"),__name(handleEvent,"handleEvent"),cow(),console.log("Fuck you"),h(),c();var B=f(),j=r(B);j.nodeValue=`svelte:window on:keypress=${handleEvent} /> `;var D=o(j,3);D.textContent="    var dF3x = () => {}; \n\n    function M (x) {\n        return function go (func){\n            if (func === dF3x) return x;\n            else x = idP(x).then(v => func(v));\n            return go;\n        };\n    };\n    \n    const m = M(3); ";var I=o(D,4),E=o(I,7),T=u(E,!0);d(E);var _=o(E,7),H=o(u(_)),O=u(H,!0);d(H),d(_);var R=o(_,7),W=o(u(R)),z=u(W,!0);d(W),d(R);var U=o(R,7),V=o(u(U)),$=u(V,!0);d(V),d(U);var G=o(U,6);G.textContent='    function wait(ms) {\n      return new Promise(r => setTimeout(r, ms));\n    }\n    \n    async function squareP (x) {\n      await wait(300)\n      return x*x;\n    }\n    \n    let pause = t => async x => {\n      await wait(t)\n      return x;\n    }\n    \n    async function hello (x) {\n      await wait(1000)\n      A = "Hello "\n      await wait(700)\n      B = "World"\n      await wait(700)\n      A = 42\n      await wait(700)\n      B = 42\n      return x;\n    }\n    \n    let divPinverse = a => async b => {\n      await wait (300)\n      return a/b;\n    }\n    \n    let addP =  x => async y => {\n      await wait(300)\n      return parseInt(x,10) + parseInt(y,10);\n    }\n    \n    let doubleP = async y => {\n      await wait(600)\n      return 2 * parseInt(y,10) \n    }\n    \n    let multP = x => async y => {\n      await wait(600)\n      return x * y;\n    }\n    \n    let divP = a => async b => {\n      await wait (300)\n      return b/a;\n    }\n    \n    async function cubeP (x) {\n      await wait(600)\n      return x*x*x;\n    } ',o(G,4).textContent='    function restart () {\n      A = "A"\n      B = "B"\n      C = "C"\n      D = "D"\n    m(() => 4)(addP(3)) (squareP) (v => v-7)(dF3x).then(v => (A = v));\n      \n    m(v => v/42)(v => v + 5)(v=>v*7)(pause(600))(dF3x).then(v => (B = v));\n\n    m(addP(7))(Math.sqrt)(v => v*6)(hello)(dF3x).then(a => (C = a));\n\n    m(divP(14))(v => v * 3)(addP(5))(v=> v * 3)(dF3x).then(v => (D = v)); \n\n    }',c(8),i((()=>{w(T,l(x)),w(O,l(q)),w(z,l(A)),w($,l(k))})),b("click",I,restart),a(n,B),p()}__name(_page,"_page");export{_page as component};
//# sourceMappingURL=7.DGMHz1fY.js.map
